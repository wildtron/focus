#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var spawn = require('child_process').spawn;
var argv = require('optimist').argv;

var bindir = path.resolve(__dirname, '..', 'nodewebkit');

function run() {
  var bin = bindir;
  if (process.platform === 'darwin') {
    bin = path.join(bin, 'node-webkit.app', 'Contents', 'MacOS', 'node-webkit');
  } else if (process.platform === 'win32') {
    bin = path.join(bin, 'nw.exe');
  } else {
    bin = path.join(bin, 'nw');
  }

  // copy over any asset files (icons, etc) specified via CLI args:
  require('../lib/app_assets').copyAssets(process.platform, bin);

  var args = argv._;
  if (args.length < 1) args = ['.'];
  var nw = spawn(bin, args, { stdio: 'inherit' });
  nw.on('close', function() {
    process.nextTick(function() {
      process.exit(0);
    });
  });
}

if (!fs.existsSync(bindir)) {
  console.log('node-webkit appears to have failed to download and extract. Attempting to download and extract again...');
  var child = spawn(process.argv[0], [path.resolve(__dirname, '..', 'scripts', 'install.js')], { stdio: 'inherit' });
  child.on('close', run);
} else {
  run();
}
